<?xml version='1.0' encoding='ASCII'?>
<package schemaVersion="1.0">
  <content>
    <resources target="AVR16EA28">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EA28.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16ea28.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16ea28/device-specs/specs-avr16ea28"/>
        <meta key="mmcu-option" value="avr16ea28"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16ea28/avrxmega3/libavr16ea28.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16ea28/avrxmega3/crtavr16ea28.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16ea28"/>
        <meta key="mmcu-option" value="avr16ea28"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea28.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea28.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea28.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16ea28.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16ea28.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EA28def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EA32">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EA32.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16ea32.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16ea32/device-specs/specs-avr16ea32"/>
        <meta key="mmcu-option" value="avr16ea32"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16ea32/avrxmega3/libavr16ea32.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16ea32/avrxmega3/crtavr16ea32.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16ea32"/>
        <meta key="mmcu-option" value="avr16ea32"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea32.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea32.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea32.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16ea32.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16ea32.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EA32def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EA48">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EA48.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16ea48.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16ea48/device-specs/specs-avr16ea48"/>
        <meta key="mmcu-option" value="avr16ea48"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16ea48/avrxmega3/libavr16ea48.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16ea48/avrxmega3/crtavr16ea48.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16ea48"/>
        <meta key="mmcu-option" value="avr16ea48"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea48.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea48.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16ea48.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16ea48.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16ea48.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EA48def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EB14">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EB14.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16eb14.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16eb14/device-specs/specs-avr16eb14"/>
        <meta key="mmcu-option" value="avr16eb14"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16eb14/avrxmega3/libavr16eb14.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16eb14/avrxmega3/crtavr16eb14.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16eb14"/>
        <meta key="mmcu-option" value="avr16eb14"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb14.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb14.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb14.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb14.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb14.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb14.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16eb14.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16eb14.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EB14def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EB20">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EB20.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16eb20.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16eb20/device-specs/specs-avr16eb20"/>
        <meta key="mmcu-option" value="avr16eb20"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16eb20/avrxmega3/libavr16eb20.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16eb20/avrxmega3/crtavr16eb20.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16eb20"/>
        <meta key="mmcu-option" value="avr16eb20"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb20.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb20.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb20.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb20.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb20.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb20.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16eb20.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16eb20.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EB20def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EB28">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EB28.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16eb28.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16eb28/device-specs/specs-avr16eb28"/>
        <meta key="mmcu-option" value="avr16eb28"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16eb28/avrxmega3/libavr16eb28.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16eb28/avrxmega3/crtavr16eb28.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16eb28"/>
        <meta key="mmcu-option" value="avr16eb28"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb28.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb28.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb28.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb28.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb28.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb28.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16eb28.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16eb28.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EB28def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR16EB32">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR16EB32.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr16eb32.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr16eb32/device-specs/specs-avr16eb32"/>
        <meta key="mmcu-option" value="avr16eb32"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr16eb32/avrxmega3/libavr16eb32.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr16eb32/avrxmega3/crtavr16eb32.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr16eb32"/>
        <meta key="mmcu-option" value="avr16eb32"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb32.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb32.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb32.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr16eb32.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb32.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr16eb32.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr16eb32.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr16eb32.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR16EB32def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR32EA28">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR32EA28.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr32ea28.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr32ea28/device-specs/specs-avr32ea28"/>
        <meta key="mmcu-option" value="avr32ea28"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr32ea28/avrxmega3/libavr32ea28.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr32ea28/avrxmega3/crtavr32ea28.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr32ea28"/>
        <meta key="mmcu-option" value="avr32ea28"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea28.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea28.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea28.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr32ea28.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr32ea28.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR32EA28def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR32EA32">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR32EA32.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr32ea32.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr32ea32/device-specs/specs-avr32ea32"/>
        <meta key="mmcu-option" value="avr32ea32"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr32ea32/avrxmega3/libavr32ea32.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr32ea32/avrxmega3/crtavr32ea32.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr32ea32"/>
        <meta key="mmcu-option" value="avr32ea32"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea32.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea32.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea32.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr32ea32.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr32ea32.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR32EA32def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR32EA48">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR32EA48.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr32ea48.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr32ea48/device-specs/specs-avr32ea48"/>
        <meta key="mmcu-option" value="avr32ea48"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr32ea48/avrxmega3/libavr32ea48.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr32ea48/avrxmega3/crtavr32ea48.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr32ea48"/>
        <meta key="mmcu-option" value="avr32ea48"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea48.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/crtavr32ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea48.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega3/libavr32ea48.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr32ea48.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr32ea48.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR32EA48def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR64EA28">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA28.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea28.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea28/device-specs/specs-avr64ea28"/>
        <meta key="mmcu-option" value="avr64ea28"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea28/avrxmega2/libavr64ea28.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea28/avrxmega2/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea28"/>
        <meta key="mmcu-option" value="avr64ea28"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea28.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea28.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea28.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea28.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA28def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR64EA32">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA32.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea32.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea32/device-specs/specs-avr64ea32"/>
        <meta key="mmcu-option" value="avr64ea32"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea32/avrxmega2/libavr64ea32.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea32/avrxmega2/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea32"/>
        <meta key="mmcu-option" value="avr64ea32"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea32.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea32.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea32.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea32.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA32def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
    <resources target="AVR64EA48">
      <resource type="atdf" subdir="atdf">
        <includes pattern="AVR64EA48.atdf"/>
      </resource>
      <resource type="c.header" subdir="include">
        <includes pattern="avr/ioavr64ea48.h"/>
        <includes pattern="component-version.h"/>
      </resource>
      <resource type="c.source.exe.template" subdir="templates">
        <includes pattern="main.c"/>
      </resource>
      <resource type="c.source.lib.template" subdir="templates">
        <includes pattern="library.c"/>
      </resource>
      <resource type="cpp.source.exe.template" subdir="templates">
        <includes pattern="main.cpp"/>
      </resource>
      <resource type="cpp.source.lib.template" subdir="templates">
        <includes pattern="library.cpp"/>
      </resource>
      <resource type="gcc.spec" subdir="gcc">
        <includes pattern="dev/avr64ea48/device-specs/specs-avr64ea48"/>
        <meta key="mmcu-option" value="avr64ea48"/>
      </resource>
      <resource type="gcc.lib" subdir="gcc">
        <includes pattern="dev/avr64ea48/avrxmega2/libavr64ea48.a"/>
      </resource>
      <resource type="gcc.startup.obj" subdir="gcc">
        <includes pattern="dev/avr64ea48/avrxmega2/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.spec" subdir="xc8">
        <includes pattern="avr/device-specs/specs-avr64ea48"/>
        <meta key="mmcu-option" value="avr64ea48"/>
      </resource>
      <resource type="xc8.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.mapped.startup.obj" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/crtavr64ea48.o"/>
      </resource>
      <resource type="xc8.memxconst.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.memxconst.mapped.lib" subdir="xc8">
        <includes pattern="avr/lib/avrxmega2/memx-const/mapped/libavr64ea48.a"/>
      </resource>
      <resource type="xc8.c.header" subdir="xc8">
        <includes pattern="avr/include/avr/ioavr64ea48.h"/>
      </resource>
      <resource type="xc8.cfgdata" subdir="xc8">
        <includes pattern="avr/cfgdata/avr64ea48.cfgdata"/>
      </resource>
      <resource type="avrasm.header" subdir="avrasm/inc">
        <includes pattern="AVR64EA48def.inc"/>
      </resource>
      <resource type="avrasm.source.template" subdir="avrasm/templates">
        <includes pattern="main.asm"/>
      </resource>
    </resources>
  </content>
  <pdsc xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" vendor="Atmel" compliant="false">
    <releases>
      <release version="2.5.BUILDNUMBER">
      - Added support for AVR16EBxx.
      </release>
      <release version="2.4.168" date="2023-04-18">
	    - Added support for AVR16EAxx and AVR32EAxx.
	  </release>
      <release version="2.3.163" date="2023-03-22">
        - MPLABXE-6808 MPLABXE-6901 Enables configuring of how to access const variables on devices with more than 32k flash.
        - Update signal descriptions and captions for certain registers.
      </release>
      <release version="2.2.56" date="2022-04-22">Added prerequisite to Microchip Studio 7.0.2564 or newer. Fixed startup for devices that write to NVMCTRL.CTRLB to use CCP.</release>
      <release version="2.1.48" date="2022-03-03">Corrected typo in ADC MUXNEG AC1 DAC value reference. Corrected NVMCTRL module id.</release>
      <release version="2.0.44" date="2022-01-28">Add an underscore between bitfield name and bitfield bit-number for bitfield defines on bitfields with more than one bit for both C-header and assembler .inc files.</release>
      <release version="1.0.38" date="2022-01-10">Initial release.</release>
    </releases>
    <prerequisites>
      <prerequisite context="studio" component="Atmel Studio" version="7.0.2564"/>
    </prerequisites>
  </pdsc>
</package>
